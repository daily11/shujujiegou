
//https://leetcode-cn.com/problems/implement-stack-using-queues/solution/yong-dui-lie-shi-xian-zhan-by-leetcode/
class MyStack {
	
	Queue<Integer> q1 = null;
	Queue<Integer> q2 = null;
	int top;

    /** Initialize your data structure here. */
    public MyStack() {
    	q1 = new LinkedList<>();
    	q2 = new LinkedList<>();
    }
    
    /** Push element x onto stack. */
    public void push(int x) {
    	q1.add(x);
        top = x;
    }
    
    /** Removes the element on top of the stack and returns that element. */
    public int pop() {
    	while (q1.size() > 1) {
            top = q1.remove();//从队头一直删，直到末尾值
            q2.add(top);
        }
        int ret = q1.remove();
        Queue<Integer> temp = q1;
        q1 = q2;
        q2 = temp;
        return ret;
    }
    
    /** Get the top element. */
    public int top() {
    	return top;
    }
    
    /** Returns whether the stack is empty. */
    public boolean empty() {
    	return q1.isEmpty();
    }
}